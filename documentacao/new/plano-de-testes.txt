
1. Introdução

1.1 Finalidade

Este documento de Plano de Teste referente ao projeto "Calculador de Rotas Supremo" atende aos seguintes objetivos:

1. Inspecionar o funcionamento do calculador de rotas, a rotina de atualização de mapas, o armazenamento adequado dos históricos de
rotas e o funcionamento da filtragem de rotas.

2. Garantir um desempenho aceitável para o cálculo de rotas, de forma que não tome um tempo muito longo.

3. Serão feitos testes funcionamento, desempenho, tolerância à falhas, integridade de dados.

4. Os recursos necessários serão todos os requisitos funcionais já implementados, ter os mapas já baixados para serem processados,
e um método de armazenamento de dados funcional.

1.2 Escopo

Os testes abordarão os seguintes tópicos: Funcionalidade, Usabilidade, Confiabilidade e Desempenho.

Será testado a integração entre a aquisição dos mapas e seu processamento para o cálculo de rotas

A seguinte interface será testada:

Interação entre o usuário e o mapa.

1.3 Público Alvo

Os testes serão feitos com o foco no usuário final, entregadores de produtos.


2. Missão de Avaliação e Motivação dos Testes

Garantir principalmente que o algoritmo de busca forneça rotas ótimas que gastem a menor quantidade possível de recurso e que
esse algoritmo forneça uma resposta em tempo aceitável.

2.1 Fundamentos

A principal dificuldade do teste está no problema de interpretar os dados fornecido pelo banco de dados que contém os mapas,
eliminar as informações irrelevantes para o programa, e garantir que as rotas serão aceitáveis e factíveis com os casos reais.
O principal benefício desta solução será que a partir do momento em que este problema estiver resolvido, a maior parte do
software estará feita.

2.2 Missão de Avaliação

1. Identificar a maior quantidade de erros possível

2. Localizar problemas Importantes

3. Identificar a estrutura de dados adequada para a representação do mapa.

4. Minimizar o tempo necessário para a execução do cálculo de rotas.


3. Itens de Teste-Alvo

Interface de utilização do mapa.

Capacidade do hardware onde o programa será usado.

Algoritmo de busca e expansão responsável por realizar o cálculo das rotas.

Esquema de armazenamento de dados que será responsável por salvar as preferências e as rotas mais utilizadas.


4. Resumo dos Testes Planejados

Será necessário ter no mínimo uma pequena quantidade de mapas diferentes para verificar a consistência do algoritmo de calculo
de rotas, e pelo menos um usuário para verificar as funcionalidades de histórico, filtragem e sincronização de mapa.


5. Abordagem dos Testes

5.1 Teste de Funcionalidade:

Objetivo da técnica: verificar o funcionamento correto das principais funções do programa.

Técnica: Simular cada um dos casos de usos como sendo o usuário final do programa.
	 As devidas mensagens de erro serão apresentadas caso algo não ocorra conforme o esperado.

Estratégia: Verificar consistência de rotas.
	    Verificar se as rotas estão condizentes com a realidade.
	    Garantir que um ponto da rota não foi utilizado duas vezes.
	    Garantir que os históricos foram salvos, observar se a informação não foi adulterada no momento de armazenamento
	    Verificar se o mapa sincronizado está correto, e que as informações relevantes foram mantidas e devidamente processadas

Ferramentas necessárias: Script de atualização e processamento automático dos arquivos de mapa.
			 Ferramentas para backup de dados.

Critérios de Êxito: Todos os casos de uso funcionando.


5.2 Teste de Desempenho

Objetivo da técnica: medir a qualidade da rotina de cálculo de rota, quanto ao tempo gasto para o cálculo, e a qualidade da rota
		     em si encontrada.

Técnica: Executar o algoritmo de busca diversas vezes e obter uma média do tempo de execução e do custo total das rotas calculadas.

Estratégia: Para cada teste, utilizar pontos com distâncias similares de modo que a comparação entre cada roda calculada seja
	    justa e que as médias não fiquem infectadas com dados discrepantes.

Ferramentas necessárias: Ferramenta para medir o tempo de execução do algoritmo
			 Script para o cálculo das médias

Critérios de Êxito: O encontro da rota ótima.
		    O menor tempo possível de execução do algoritmo.

5.2 Teste de Tolerância à Falhas

Objetivo da técnica: Testar a flexibilidade do programa quanto ao processamento incorreto dos dados do mapa e das rotas.

Técnica: Executar o algoritmo de busca diversas vezes, com dados incompletos, ou com diversos pontos inacessíveis.

Estratégia: Verificar se, perante a um ponto inacessível ou com dados corrompidos, o algoritmo tenta encontrar uma rota alternativa.

Ferramentas necessárias: nada além do próprio programa.

Critérios de Êxito: obtenção de uma rota independente de dados incompletos.

5.3 Teste de Integridade de Dados

Objetivo da técnica: Verificar se o mapa foi devidamente sincronizado.
		     Verificar se o histórico e estatísticas foram salvos com sucesso.
		     Verificar se o programa tem persistência de dados perante ao fechamento inesperado do programa.

Técnica: Simular os casos de uso em que são utilizadas as funções de histórico e estatísticas
	 Executar a atualização do mapa e verificar com os dados originais.

Estratégia: Desligar o dispositivo do momento da execução do programa.
	    Acessar o site no qual se encontram os dados originais do mapa e verificar com os dados sincronizados do programa.

Ferramentas necessárias: Script para calcular as rotas diversas vezes para a geração de histórico.

Critério de Êxito: Dados consistentes após situações inesperadas.
